create table if not exists public.favorites (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  quote text not null,
  author text not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  
  -- Add a unique constraint to prevent duplicate favorites for the same user
  unique(user_id, quote)
);

-- Set up Row Level Security (RLS)
alter table public.favorites enable row level security;

-- Create policy to allow users to insert their own favorites
create policy "Users can insert their own favorites"
  on public.favorites for insert
  with check (auth.uid() = user_id);

-- Create policy to allow users to view their own favorites
create policy "Users can view their own favorites"
  on public.favorites for select
  using (auth.uid() = user_id);

-- Create policy to allow users to delete their own favorites
create policy "Users can delete their own favorites"
  on public.favorites for delete
  using (auth.uid() = user_id);